diff '--color=auto' -ruN a/vhost-device-scmi.1 b/vhost-device-scmi.1
--- a/vhost-device-scmi.1	1970-01-01 01:00:00.000000000 +0100
+++ b/vhost-device-scmi.1	2023-10-03 14:47:01.985250670 +0200
@@ -0,0 +1,96 @@
+.\" Automatically generated by Pandoc 2.19.2
+.\"
+.\" Define V font for inline verbatim, using C font in formats
+.\" that render this, and otherwise B font.
+.ie "\f[CB]x\f[]"x" \{\
+. ftr V B
+. ftr VI BI
+. ftr VB B
+. ftr VBI BI
+.\}
+.el \{\
+. ftr V CR
+. ftr VI CI
+. ftr VB CB
+. ftr VBI CBI
+.\}
+.TH "VHOST-DEVICE-SCMI" "1" "" "Version 0.1.0" "rust-vmm/vhost-device"
+.hy
+.SH NAME
+.PP
+\f[B]vhost-device-scmi\f[R] \[em] vhost-user backend for a VirtIO SCMI
+device
+.SH SYNOPSIS
+.PP
+\f[B]vhost-device-scmi\f[R] \f[B]-s\f[R]|\f[B]--socket-path\f[R]
+\f[I]path\f[R] [\f[B]-d\f[R]|\f[B]--device\f[R] \f[I]spec\f[R]]
+.PD 0
+.P
+.PD
+\f[B]vhost-device-scmi\f[R] [\f[B]-h\f[R]|\f[B]--help\f[R]]
+.SH DESCRIPTION
+.PP
+This program is a vhost-user backend for a VirtIO SCMI device.
+It provides SCMI access to various entities on the host; not necessarily
+only those providing an SCMI interface themselves.
+.PP
+It is tested with QEMU\[cq]s \f[V]-device vhost-user-scmi-pci\f[R] but
+should work with any virtual machine monitor (VMM) that supports
+vhost-user.
+See \f[I]EXAMPLES\f[R] section below.
+.SS Options
+.TP
+-h, --help
+Print help.
+.TP
+-s, --socket-path=PATH
+Location of the vhost-user Unix domain sockets.
+.TP
+-d, --device=SPEC
+SCMI device specification in the format \f[V]ID,PROPERTY=VALUE,...\f[R].
+For example:
+\f[V]-d iio,path=/sys/bus/iio/devices/iio:device0,channel=in_accel\f[R].
+Can be used multiple times for multiple exposed devices.
+If no device is specified then no device will be provided to the guest
+OS but VirtIO SCMI will be still available there.
+.TP
+--help-devices
+List help on all the available devices.
+.SH EXAMPLES
+.PP
+The daemon should be started first:
+.IP
+.nf
+\f[C]
+host# vhost-device-scmi --socket-path=scmi.sock --device fake,name=foo
+\f[R]
+.fi
+.PP
+The QEMU invocation needs to create a chardev socket the device can use
+to communicate as well as share the guests memory over a memfd:
+.IP
+.nf
+\f[C]
+host# qemu-system \[rs]
+   -chardev socket,path=scmi.sock,id=scmi \[rs]
+   -device vhost-user-scmi-pci,chardev=vscmi,id=scmi \[rs]
+   -machine YOUR-MACHINE-OPTIONS,memory-backend=mem \[rs]
+   -m 4096 \[rs]
+   -object memory-backend-file,id=mem,size=4G,mem-path=/dev/shm,share=on \[rs]
+   ...
+\f[R]
+.fi
+.SH ENVIRONMENT
+.TP
+\f[B]RUST_LOG\f[R]
+Logging level.
+Set to \f[V]debug\f[R] for maximum output.
+.SH BUGS
+.PP
+See GitHub Issues: <https://github.com/rust-vmm/vhost-device/issues>
+.SH AUTHOR
+.PP
+Milan Zamazal <mzamazal@redhat.com>
+.SH SEE ALSO
+.PP
+\f[B]qemu(1)\f[R]
